<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssmshop.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.ssmshop.pojo.Message" >
    <constructor >
      <idArg column="message_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="admin_id" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="type" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="category" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="send_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ssmshop.pojo.Message" >
    <constructor >
      <idArg column="message_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="admin_id" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="type" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="category" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="send_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="message" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    message_id, admin_id, type, category, send_time
  </sql>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ssmshop.pojo.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tp_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssmshop.pojo.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tp_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tp_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tp_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssmshop.pojo.MessageExample" >
    delete from tp_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssmshop.pojo.Message" >
    insert into tp_message (message_id, admin_id, type, 
      category, send_time, message
      )
    values (#{messageId,jdbcType=INTEGER}, #{adminId,jdbcType=SMALLINT}, #{type,jdbcType=TINYINT}, 
      #{category,jdbcType=TINYINT}, #{sendTime,jdbcType=INTEGER}, #{message,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssmshop.pojo.Message" >
    insert into tp_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=SMALLINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="category != null" >
        #{category,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssmshop.pojo.MessageExample" resultType="java.lang.Integer" >
    select count(*) from tp_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tp_message
    <set >
      <if test="record.messageId != null" >
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=SMALLINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=TINYINT},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tp_message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=TINYINT},
      category = #{record.category,jdbcType=TINYINT},
      send_time = #{record.sendTime,jdbcType=INTEGER},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tp_message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=TINYINT},
      category = #{record.category,jdbcType=TINYINT},
      send_time = #{record.sendTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssmshop.pojo.Message" >
    update tp_message
    <set >
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=SMALLINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssmshop.pojo.Message" >
    update tp_message
    set admin_id = #{adminId,jdbcType=SMALLINT},
      type = #{type,jdbcType=TINYINT},
      category = #{category,jdbcType=TINYINT},
      send_time = #{sendTime,jdbcType=INTEGER},
      message = #{message,jdbcType=LONGVARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssmshop.pojo.Message" >
    update tp_message
    set admin_id = #{adminId,jdbcType=SMALLINT},
      type = #{type,jdbcType=TINYINT},
      category = #{category,jdbcType=TINYINT},
      send_time = #{sendTime,jdbcType=INTEGER}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>